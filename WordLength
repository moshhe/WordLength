import edu.duke.*;
import org.apache.commons.csv.*;
/**
 * 
 * @moshhe
 * @v0.0.1
 */

public class WordLengths{
    public String[] getCommon(String input){
        //Creates a file from a list of common words
        FileResource fr = new FileResource();
        //Creates String with these common words
        String[] common = new String[20];

        int index = 0;
        for(String s : fr.words()){
            common[index] = s;
            index += 1;
        }
        return common;
    }

    public int indexOf(String[] list, String word){
        for(int k = 0; k<list.length; k++){
            if(list[k].equals(word)){
                return k;
            }
        }
        return -1;
    }

    public void countWords(FileResource fr, String[] common, int[] counts){
        for(String word: fr.words()){
            word = word.toLowerCase();
            int index = indexOf(common,word);
            if(index != -1){
                counts[index] +=1;
            }
        }
    }

    public int[] countWordLengths(FileResource fr, int[]counts){
        for(String word: fr.words()){
            int x = word.length();
            int length = 0;
            for(int i = 0; i < x; i++){
                if(Character.isLetter(word.charAt(i)));
                length += 1;
            }
            if(length<= counts.length & length !=0){
                counts[length-1] += 1;
            }
            else{
                System.out.println("The length of array counts is not enough.");
            }

        }
        return counts;
    }

    public void testcountWordLengths(){
        FileResource fr = new FileResource();
        int[] counts = new int[31];
        int[] result = countWordLengths(fr, counts);
        for(int i = 0; i<31; i++){
            System.out.println(result[i] + " words of length " + (i + 1));
        }
        int maxlength = indexOfMax(result);
        System.out.println("The most common word length in the file is " + maxlength);
    }

    public int indexOfMax(int[] values){
        int maxValue = 0;
        int position = 0;
        for(int i = 0; i<values.length; i++){
            if(maxValue == 0){
                maxValue = values[i];
            }
            else{
                if(maxValue < values[i]){
                    maxValue = values[i];
                    position = i;
                }
            }
        }
        return position+1;
    }
}

/*public void countShakespeare(){
String[] plays = {"caesar.txt", "errors.txt", "hamlet.txt", "likeit.txt", "macbeth.txt",
"romeo.txt"};

//String[] common = getCommon("data/" + plays[]);

int[]counts = new int[common.length];
for(int k = 0; k < plays.length; k++){
FileResource fr = new FileResource("data/" + plays[k]);
countWords(fr, common, counts);
System.out.println("Done with " + plays[k]);
}

for(int k = 0; k < common.length; k++){
System.out.println(common[k] + "\t" + counts[k]);
}
} */

// /** public void countPlay(){
//  FileResource fr = newFileResource();
//  */
